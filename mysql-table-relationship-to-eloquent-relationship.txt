
/**
 * method to get model name based on tablename
 * initially checking at default namespace App
 */
function getModelName($tableName) {
    $className = 'App\\' . studly_case(str_singular($tableName));
    if (class_exists($className)) {
        $model = new $className;
    }
    if (is_subclass_of($model, 'Illuminate\Database\Eloquent\Model')) {
        $model = new $className();
        if ($model->getTable() === $tableName) {
            return $className;
        }
    }
    return false;
}

/*
 *Add this below route at your desired route/*.php file if your are working with laravel >= 5.2
 * added to web.php for me 
 */
 
 Route::get('model-relations-check', function() {
        $results = Illuminate\Support\Facades\DB::select(Illuminate\Support\Facades\DB::raw("SELECT TABLE_NAME,COLUMN_NAME,CONSTRAINT_NAME, REFERENCED_TABLE_NAME,REFERENCED_COLUMN_NAME FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE WHERE REFERENCED_TABLE_SCHEMA = 'yourdatabase';"));
        /**
         * Check and get all relational tables from database 'yourdatabase'
         * 
         */
        foreach ($results as $one) {
            $one = (array) $one;
            if (getModelName($one['TABLE_NAME']) && getModelName($one['REFERENCED_TABLE_NAME'])) {
                $mainModel = getModelName($one['TABLE_NAME']);
                $mainModelId = $one['COLUMN_NAME'];
                $relatedModel = getModelName($one['REFERENCED_TABLE_NAME']);
                $relatedModelId = $one['REFERENCED_COLUMN_NAME'];

                if (!method_exists($mainModel, str_singular($one['REFERENCED_TABLE_NAME']))) {
                    echo '<pre>in ' . $mainModel . '.php add below function <br>'
                    . '/**'
                    . ' * relationship with model ' . $relatedModel
                    . ' */<br>'
                    . ' public function ' . str_singular($one['REFERENCED_TABLE_NAME']) . '(){<br>'
                    . ' return $this->belongsTo(\'' . $relatedModel . '\',\'' . $mainModelId . '\',\'' . $relatedModelId . '\');'
                    . '<br>}</pre>';
                } else {
                    echo '<pre>' . $mainModel . ' already have ' . str_singular($one['REFERENCED_TABLE_NAME']) . '() method.</pre>';
                }
                if (!method_exists($relatedModel, str_singular($one['TABLE_NAME']))) {

                    echo '<pre>in ' . $relatedModel . '.php add below function <br>'
                    . '/**'
                    . ' * relationship with model ' . $mainModel
                    . ' */<br>'
                    . ' public function ' . str_singular($one['TABLE_NAME']) . '(){<br>'
                    . ' return $this->hasMany(\'' . $mainModel . '\',\'' . $mainModelId . '\');'
                    . '<br>}</pre>';
                } else {
                    echo '<pre>' . $relatedModel . ' already have ' . str_singular($one['TABLE_NAME']) . '() method.</pre>';
                }
            } else {
                echo 'nothing to show';
            }
        }
    });

